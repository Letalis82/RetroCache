@page "/"
@inject GameState gameState

@if (gameState.CurrentCache != null)
{
    <h2>Zoekie zoekie naar:</h2>
    <h3>Latitude: @gameState.CurrentCache.Latitude</h3>
    <h3>Longitude: @gameState.CurrentCache.Longitude</h3>
}
<br>
<br>
<h1>@gameState.Title</h1>
<p>@((MarkupString)@gameState.Question)</p>
<br />


@if (gameState.IsGameStarted && !gameState.IsLastQuestion)
{
     <p><input type="text" @bind="@currentAnswer" /></p>
     <p><button class="btn btn-primary" @onclick="CheckAnswer">Check answer</button></p>
}
else
{
    if (gameState.GameIsActive && !gameState.Title.Equals("-"))
    {<button class="btn btn-primary" @onclick="Next">Next</button>}
}

@if (gameState.AnswerCorrect)
{
    <h2>@gameState.AnswerHeader</h2>
    <p>@gameState.Answer</p>
}

@code
{
        bool showAnswerResult = false;
        string currentAnswer;

        async void Next()
        {
            await gameState.Next();
            this.StateHasChanged();
        }

        protected override void OnAfterRender(bool firstRender)
    {
        if (firstRender && gameState.IsGameStarted)
        {
            Next();
        }
    }

    async void CheckAnswer()
    {
        bool result = await gameState.ValidateAnswer(currentAnswer);

        if (result)
        {
            currentAnswer = string.Empty;
        }

        Next();
    }

}
